<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.restaurant.userservice.Repositories.UserRepository"/>
    <fullyQualifiedTypeName name="com.restaurant.userservice.entities.User"/>
    <fullyQualifiedTypeName name="com.restaurant.userservice.UserServices.UserServices"/>
    <fullyQualifiedTypeName name="com.restaurant.userservice.Exception.ResouceNotFound"/>
    <fullyQualifiedTypeName name="com.restaurant.userservice.payload.ApiResponse"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"/>
    <fullyQualifiedTypeName name="javax.sql.DataSource"/>
    <fullyQualifiedTypeName name="org.springframework.boot.jdbc.DataSourceBuilder"/>
    <fullyQualifiedTypeName name="com.restaurant.hotel.Repository.HotelRepo"/>
    <fullyQualifiedTypeName name="com.restaurant.hotel.exception.ResourceNotFound"/>
    <fullyQualifiedTypeName name="com.restaurant.hotel.service.HotelServices"/>
    <fullyQualifiedTypeName name="com.restaurant.hotel.entity.Hotel"/>
    <fullyQualifiedTypeName name="org.apache.tomcat.util.net.TLSClientHelloExtractor"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.core.sym.Name"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.restaurant.hotel.repository.ratingRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.restaurant.hotel.RatingServiceApplication"/>
    <fullyQualifiedTypeName name="com.restaurant.hotel.service.ratingService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatusCode"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.restaurant.hotel.entities.Rating"/>
    <fullyQualifiedTypeName name="org.springframework.web.service.annotation.GetExchange"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="com.restaurant.userservice.applicationName"/>
    <fullyQualifiedTypeName name="org.springframework.boot.builder.SpringApplicationBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
</qualifiedTypeNameHistroy>
